CREATE TABLE vendor (
  id INTEGER PRIMARY KEY,
  vendor_name TEXT NOT NULL,
  vendor_address TEXT NOT NULL,
  city TEXT NOT NULL,
  vendor_state TEXT NOT NULL,
  zip_code INTEGER NOT NULL,
  accounting_manager TEXT NOT NULL
);

CREATE TABLE employee (
  id INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  employee_phone INTEGER,
  employee_name TEXT NOT NULL,
  employee_username TEXT NOT NULL UNIQUE,
  employee_password TEXT NOT NULL
);

CREATE TABLE plant (
  id INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  plant_name TEXT NOT NULL,
  plant_time TEXT NOT NULL,
  plant_desc TEXT NOT NULL,
  plant_price NUMERIC default 0,
  quantity INTEGER DEFAULT 0
);

CREATE TABLE client (
  id INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  email_address TEXT NOT NULL,
  billing_account TEXT NOT NULL,
  client_contact TEXT NOT NULL,
  client_address TEXT NOT NULL, 
  client_city TEXT NOT NULL,
  client_state TEXT NOT NULL,
  client_zip INTEGER NOT NULL, 
  client_phone INTEGER NOT NULL,
  client_name TEXT NOT NULL,
  client_account_manager TEXT NOT NULL
);

CREATE TABLE vendor_purchase_order (
  id INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
 
  employee_id INTEGER,
  vendor_id INTEGER,
  order_date DATE DEFAULT now(),

  CONSTRAINT fk_employee
      FOREIGN KEY(employee_id) 
	  REFERENCES employee(id),

      CONSTRAINT fk_vendor
      FOREIGN KEY(vendor_id) 
	  REFERENCES vendor(id)
);

CREATE TABLE vendor_delivery (
  id INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  vendor_purchase_id INTEGER,
  delivery_date DATE,
  quantity_delivered INTEGER DEFAULT 0,
  quantity_rejected INTEGER DEFAULT 0,
      FOREIGN KEY(vendor_purchase_id) 
	   REFERENCES vendor_purchase_order(id)
);

CREATE TABLE vendor_payment (
  id INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  vendor_purchase_id INTEGER,
  amount NUMERIC,
  date_paid DATE,
    FOREIGN KEY(vendor_purchase_id) 
	   REFERENCES vendor_purchase_order(id)
);

CREATE TABLE vendor_plant_prices (
  id INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  plant_id INTEGER,
  price NUMERIC NOT NULL,
  FOREIGN KEY(plant_id) 
    REFERENCES plant(id)
);

CREATE TABLE vendor_plant_order (
  vendor_plant_id INTEGER,
  vendor_purchase_id INTEGER,
  quantity INTEGER NOT NULL,
  
  PRIMARY KEY (vendor_plant_id, vendor_purchase_id),

  FOREIGN KEY( vendor_plant_id)
   REFERENCES vendor_plant_prices(id),
  FOREIGN KEY(vendor_purchase_id) 
	   REFERENCES vendor_purchase_order(id)
);

CREATE TABLE size_rate (
  id INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  fee_id INTEGER NOT NULL,
  size_desc TEXT NOT NULL
);

CREATE TABLE plant_size (
  plant_id INTEGER,
  size_id INTEGER,
  PRIMARY KEY (plant_id, size_id),

  FOREIGN KEY(plant_id)
  REFERENCES plant(id),

  FOREIGN KEY(size_id)
  REFERENCES size_rate(id)
);

CREATE TABLE orders (
  id INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  order_date DATE DEFAULT now(),
  employee_id INTEGER,
  client_id INTEGER,

  FOREIGN KEY(client_id)
        REFERENCES client(id),
  FOREIGN KEY(employee_id)
        REFERENCES employee(id)
);

CREATE TABLE plant_order (
  order_id INTEGER,
 
  plant_id INTEGER,
 
  quantity INTEGER,
  PRIMARY KEY (order_id, plant_id),
FOREIGN KEY(order_id)
REFERENCES orders(id),
FOREIGN KEY(plant_id)
REFERENCES plant(id)
);



CREATE TABLE payment (
  id INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  order_id INTEGER,
  paid Boolean default false,    
  amount_paid NUMERIC DEFAULT 0,
  total NUMERIC NOT NULL,
  interest_rate NUMERIC DEFAULT 0,
  FOREIGN KEY(order_id)
  REFERENCES orders(id) 
);

CREATE TABLE delivery (
  id INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  order_id INTEGER,
      
  delivery_date DATE,
  delivery_time TIME,
  delivery_distance INTEGER NOT NULL,
  delivery_fee_rate NUMERIC,
  FOREIGN KEY(order_id)
  REFERENCES orders(id)
);
